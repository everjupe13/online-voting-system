// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Topics {
  id             Int         @id @default(autoincrement())
  name           String      @db.VarChar(255)
  createdAt      DateTime    @default(now())
  description    String
  votes          Votes[]
  stars          Stars[]
}

model Votes {
  // id            Int       @id @default(autoincrement())
  topic         Topics     @relation(fields: [topicId], references: [id])
  topicId       Int
  user          User       @relation(fields: [userId], references: [id])
  userId        Int
  voted         Boolean    @default(true)
  voteResult    Boolean    @default(false)

  @@id([topicId, userId])

  // votedUser    User     @relation(fields: [authorId], references: [id])
  // votedUserId  Int
}

model Stars {
  topic         Topics    @relation(fields: [topicId], references: [id])
  topicId       Int
  user          User      @relation(fields: [userId], references: [id])
  userId        Int
  isStared      Boolean   @default(false)

  @@id([topicId, userId])
}

model User {
  id          Int        @id @default(autoincrement())
  email       String     @unique @db.VarChar(255)
  password    String     @db.VarChar(255)
  createdAt   DateTime   @default(now())
  votes       Votes[]
  stars       Stars[]  
  profile      Profile?
}

model Profile {
  id        Int        @id @default(autoincrement())
  bio       String?   
  name      String?    
  user      User       @relation(fields: [userId], references: [id])
  userId    Int        @unique
}





// model Votes {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

